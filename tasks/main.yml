# file: s3fs/tasks/main.yml
---

  - command: "which s3fs"
    register: s3_exists
    ignore_errors: True

  - name: install prequisites
    become: yes
    apt: "pkg={{ item }} state=present"
    with_items:
      - build-essential
      - libfuse-dev
      - libcurl4-openssl-dev
      - libxml2-dev
      - mime-support
      - unzip
      - autoconf
      - fuse-utils
    when: s3_exists|failed

  - name: Configure | /etc/fuse.conf | user_allow_other
    lineinfile:
      state: present
      dest: /etc/fuse.conf
      regexp: '^#?user_allow_other'
      line: user_allow_other

  - name: "copy src"
    copy: 
      src: "s3fs-{{ s3fs_version }}.tar.gz"
      dest: "/tmp/s3fs-{{ s3fs_version }}.tar.gz"
      mode: 0644

  - name: "copy password"
    copy:
      src: "{{ s3fs_aws_key }}"
      dest: "/home/{{ system_user }}/.passwd-s3fs"
      mode: 0600
      owner: "{{ system_user }}"
      group: "{{ system_group }}"
    become: yes
    when: s3fs_aws_key is defined

  - name: extract
    unarchive: 
      src: "/tmp/s3fs-{{ s3fs_version }}.tar.gz"
      dest: /tmp
      copy: no
    when: s3_exists|failed

  - name: "configure & build"
    become: yes
    command: "{{ item }} chdir='/tmp/s3fs-{{ s3fs_version }}'"
    with_items:
      - autoreconf --install
      - ./configure --prefix=/usr
      - make
      - make install
    when: s3_exists|failed

  - name: Add `fuse` group
    group:
      name: fuse
      state: present

  - name: Set `fuse` group / permissions
    file:
      path: /dev/fuse
      state: touch
      mode: "g+rw" 
      group: fuse

  - name: Adding system user to `fuse` group  
    user: name={{ system_user }}
          groups=fuse
          append=yes

  - name: create mount point
    become: yes
    file:
      path: "{{ item.mount }}"
      state: "directory"
      owner: "{{ system_user }}"
      group: "{{ system_group }}"
    when: s3_exists|failed
    with_items: s3fs_mounts

  - name: mount the bucket
    become: yes
    become_user: "{{ system_user }}"
    command: "s3fs {{ item.bucket }} -o use_cache={{ item.cache }} -o default_acl='public-read' -o allow_other -o umask=0022 -o url=http://{{ s3fs_url }} {{ item.mount }}"
    when: s3_exists|failed
    with_items: s3fs_mounts

  #- name: add s3fs mount to fstab
  #  mount:
  #    name: "{{ item.mount }}"
  #    src: "{{ item.bucket }}"
  #    fstype: "fuse.s3fs"
  #    opts: "_netdev,allow_other,retries=10,readwrite_timeout=60,connect_timeout=60,uid={{ system_user }},gid={{ system_group }}"
  #    dump: '0'
  #    passno: '0'
  #    state: present
  #  with_items: s3fs_mounts
